local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = game:GetService("Workspace").CurrentCamera

local function createNameLabel(player)
    local humanoidRootPart = (player.Character or player.CharacterAdded:Wait()):WaitForChild("HumanoidRootPart")
    local billboardGui = Instance.new("BillboardGui", humanoidRootPart)
    billboardGui.Size = UDim2.new(0, 200, 0, 50)
    billboardGui.StudsOffset = Vector3.new(0, 3, 0)
    billboardGui.AlwaysOnTop = true

    local textLabel = Instance.new("TextLabel", billboardGui)
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = player.Name
    textLabel.TextColor3 = Color3.fromRGB(255, 215, 0) -- RGB color for the text
    textLabel.TextScaled = true
    textLabel.Font = Enum.Font.SourceSans -- Use a shorter font style
    textLabel.TextSize = 18 -- Adjust text size for better visibility

    player.AncestryChanged:Connect(function(_, parent)
        if not parent then billboardGui:Destroy() end
    end)
end

local function highlightPlayer(player)
    local character = player.Character or player.CharacterAdded:Wait()
    local highlight = Instance.new("Highlight", character)
    highlight.FillColor = Color3.new(1, 0, 0)
    highlight.FillTransparency = 0.5
    highlight.OutlineColor = Color3.new(1, 1, 1)
    highlight.OutlineTransparency = 0

    createNameLabel(player)

    player.AncestryChanged:Connect(function(_, parent)
        if not parent then highlight:Destroy() end
    end)
end

Players.PlayerAdded:Connect(highlightPlayer)
for _, player in Players:GetPlayers() do highlightPlayer(player) end

RunService.RenderStepped:Connect(function()
    for _, player in Players:GetPlayers() do
        local character = player.Character
        if character then
            local distance = (Camera.CFrame.Position - character.HumanoidRootPart.Position).magnitude
            local highlight = character:FindFirstChildOfClass("Highlight")
            if highlight then highlight.FillTransparency = math.clamp(0.5 + (distance / 100), 0, 1) end
        end
    end
end)
